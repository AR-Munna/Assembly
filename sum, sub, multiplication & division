segment .data
fmt: db "%d %d", 0
fmt2: db "%d %d", 10, 0
fmt3: db "The result is: %d", 10, 0
fmt4: db "The result is: %d  and the remainder: %d", 10, 0

segment .bss
hello: resq 1
h2: resq 1
sum: resq 1

segment .text

global main
extern scanf
extern printf

main:
call input
push rbp

input:
mov rdi, fmt
mov rsi, hello
mov rdx, h2
mov rax, 0
call scanf

addition:
mov rdi, fmt3
mov rcx, 0
add rcx, [hello]
add rcx, [h2]
mov rsi, rcx
mov rax, 0
call printf

subtraction:
mov rdi, fmt3
mov rbx, [hello]
mov rcx, [h2]
sub rbx, rcx
mov rsi, rbx
mov rax, 0
call printf

multiplication:
mov rdi, fmt3
mov rax, [hello]
mov rbx, [h2]
mul rbx
mov rsi, rax
mov rax, 0
call printf

division:
mov rdi, fmt4
mov rdx, 0
mov rax, [hello]
mov rbx, [h2]
div rbx
mov rsi, rax
mov rax, 0
call printf

mov rax, 0
pop rbp
ret
